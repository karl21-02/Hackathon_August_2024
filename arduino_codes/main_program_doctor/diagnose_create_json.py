import json, glob

# 진료 대화 파일 목록
file_paths = glob.glob('./diagnosis/*.txt')

keywords = {
    'SickSpot': ['허벅지', '배', '엉덩이', '항문', '머리', '두개골', '위', '대장', '간', '신장', '귀', '코', '손목', '허리', '성기', '손가락', '눈', '이마', '정수리', '목', '외이도', '고막', '젖꼭지', '어깨', '팔', '팔꿈치', '전완근', '겨드랑이', '가슴', '등', '명치', '윗 배', '아랫배', '배', '심장', '사타구니', '햄스트링', '힘줄', '무릎', '정강이', '발가락', '발', '발등', '아킬레스건', '전립선', '맹장', '피부', '근육', '뼈', '관절', '식도', '눈꺼풀', '혀', '이빨' ,'치아'],
    'Symptoms': ["가래", "빈혈", "간염", "역류", "감기", "담낭 절제술", "결핵", "충격", "고혈압", "벌", "구토", "화상",
    "기력", "뺑소니", "기침", "타격", "당뇨", "무기력", "당뇨병", "식은땀", "독감", "이물질", "두통", "미친개",
    "몸살", "마비", "바이러스", "가려움증", "발기", "고열", "발기부전", "얼룩", "발열", "만성", "피곤함", "폐쇄성",
    "붓기", "폐질환", "열", "폐기종", "피로", "위염", "한기", "물 토", "인후통", "상처", "복부 팽만감", "락스",
    "부종", "잔뇨", "불면", "간수치", "불면증", "코피", "설사", "정맥류", "식욕 감퇴", "입맛", "식욕 부진", "기흉", "콧물",
    "소화", "묽은 변", "심계 항진", "대상포진", "불규칙", "감전", "유전병", "수포", "암", "삐끗", "항암", "열감",
    "유전성 질환", "파열", "사고", "뱀", "알레르기", "맹장염", "코로나", "통증", "더부룩", "출혈",
    "인플루엔자", "황달", "흡연", "송곳", "혈뇨", "우울감", "호흡 곤란", "여드름", "잔뇨감", "덩어리", "무기력감",
    "섬광", "종양", "안색", "피토", "무호흡증", "혈당", "음영", "혈변", "감염", "체중 변화", "건조", "편도선",
    "미열", "변비", "똥침", "현기증", "볼록", "혈압", "트림", "흉통", "파상풍", "우울", "저릿", "스트레스", "진물",
    "절뚝", "편측마비", "장애", "착색", "물집", "자궁근종", "경련", "요도염", "통풍", "뻐근", "절단", "골다공증", "골절", "관절염", "탈구", "림프절염", "림프계 질환", "신경통", "뇌출혈", "뇌졸중", "뇌경색", "뇌종양", "척수염", "정맥류", "혈전", "동맥경화", "췌장염", "담석증", "담낭염", "식도염", "역류성 식도염", "갑상선 기능항진증", "갑상선 기능저하증", "결막염", "다래끼", "구강염", "설염", "코골이","부비동염", "비염", "피부염", "치질", "근육통", "소화불량", "염증"]
}

# 파일 별로 처리
for idx, file_path in enumerate(sorted(file_paths), start=1):
    with open(file_path, 'r', encoding='utf-8') as file:
        lines = file.readlines()

    # 결과 저장용 딕셔너리 (집합 사용하여 중복 제거)
    result = {'SickSpot': set(), 'Symptoms': set()}

    # "[환자]"로 시작하는 행만 검색
    patient_lines = [line.strip() for line in lines if line.startswith('[환자]')]
    for line in patient_lines:
        for category, words in keywords.items():
            for word in words:
                if word in line:
                    result[category].add(word)

    # 집합을 리스트로 변환하여 최종 결과 생성
    final_result = {category: list(words) for category, words in result.items()}

    # JSON 파일 생성
    output_filename = f"./diagnosis/json/emr_{idx}.json"
    with open(output_filename, 'w', encoding='utf-8') as json_file:
        json.dump(final_result, json_file, ensure_ascii=False, indent=4)

print('진료 대화에서 추출된 아픈 부위와 증상 정보가 각각의 JSON 파일에 저장되었습니다.')
